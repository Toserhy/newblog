<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>宇的回收站</title>
        <link>https://mrrockhy.gitee.io/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>1244722495@qq.com (@酒邀宇先生)</managingEditor>
            <webMaster>1244722495@qq.com (@酒邀宇先生)</webMaster><lastBuildDate>Thu, 04 Jul 2024 11:34:22 &#43;0800</lastBuildDate>
            <atom:link href="https://mrrockhy.gitee.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>如何优雅的绕过校园网计费</title>
    <link>https://mrrockhy.gitee.io/posts/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%95%E8%BF%87%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A1%E8%B4%B9/</link>
    <pubDate>Thu, 04 Jul 2024 11:34:22 &#43;0800</pubDate>
    <author>Toserhy</author>
    <guid>https://mrrockhy.gitee.io/posts/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%95%E8%BF%87%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A1%E8%B4%B9/</guid>
    <description><![CDATA[限制上网流量对科研工作的坏处主要体现在以下几个方面：
访问文献受限：
科研工作者需要频繁查阅大量的学术论文和文献资料。流量限制会导致无法顺利下载和阅读所需的文献，影响研究的进展。 数据下载和上传受限：
现代科研往往需要处理大规模的数据集。流量限制会影响数据的下载和上传速度，延长研究进程，并可能导致无法获取必要的数据资源。 在线合作受限：
科研项目通常需要跨团队合作，尤其是国际合作。限制上网流量会影响视频会议、文件共享、协作平台的使用，降低团队协作效率。 使用在线工具和服务受限：
许多科研工作依赖于在线计算平台、云存储和其他互联网服务。流量限制会影响这些工具的正常使用，进而影响研究质量和效率。 获取最新科研动态受限：
科研工作者需要随时关注本领域的最新研究动态和进展。流量限制会导致无法及时获取这些信息，错失研究机会和灵感。 技术支持受限：
使用各种科研软件和工具时，遇到问题需要在线查找解决方案或寻求技术支持。流量限制会影响问题的及时解决，进而拖延研究进程。 教育和培训受限：
科研人员需要不断学习和提升自己，参加各种在线课程和培训。流量限制会影响教育资源的获取，阻碍科研人员的职业发展和知识更新。 影响学生科研活动：
对于学生来说，流量限制会影响他们访问学术资源、完成科研项目、与导师和同学进行学术交流，进而影响学习和科研能力的培养。 总之，限制上网流量会对科研工作的各个方面产生负面影响，从文献获取、数据处理、团队合作到教育培训等，都可能因为流量限制而受到阻碍，进而影响科研效率和成果。针对这些问题，本文提出了一种基于cf大善人warp+工具的上网方法，以期解决某高校校园网的盲目计费问题。
（以上为做坏事之前的慷慨陈词）
Warp是什么 Warp 是一款网络优化和隐私保护工具，由 CloudFlare 在 2019 年愚人节推出，目标是成为互联网上最快、最安全、最尊重隐私的 DNS 解析器。其核心功能是通过 Cloudflare 的全球内容分发网络（CDN）来优化你的 Internet 连接速度，并加密你的流量以保护隐私。
通俗来说，Warp也是一种VPN，将你的流量通过cf大善人搭建的隧道转发，从而能干一些传统VPN能完成的或不能完成的事情。
Warp能干什么 可以优雅的访问绝大多数外网：
Github: https://github.com/ Youtube: https://www.youtube.com/ Google: https://www.google.com.hk/ &hellip;&hellip;
当然，由于warp+的特性，还可以绕过校园网的计费！
需要注意的是——虽然你的流量经过了Warp的转发，但是它并不会隐藏你的地址，因而一些对地域进行限制或者对IP纯净度要求较高的网站无法通过Warp访问，例如openai、twitter等
具体步骤（适用于windows/适用于有一定耐心且爱鼓捣的玩家）： 下载warp —— https://one.one.one.one/ 安装warp（使用时候只需要点击连接按钮即可，现在你先别连）
warp+的默认账号只送1G流量，需要在warp的设置中修改账号密钥
点击右下角设置按钮，勾选+warp，然后点击偏好设置，在偏好设置窗口中选择账户，点击使用其他密钥，将密钥填入即可
无限流量的账号密钥需要一定方法获得，我下面放了几个密钥，每个密钥只能绑定五个设备，可以换着试试，用完我再更新一些
7B5Xx24J-0b2sE15U-qM5314Jh4YG2O08M-g48Y6c1A-09TyFY1398J31LOP-B0stx376-V1fz3M643YBCT015-HF5L2R87-L85aN49GJ25zo9y7-980apl3D-0U1lK92b 由于GFW的存在，账户默认的ip一般都会被禁或者速度很慢连接不上，设置账号密钥完成后需要重新设置ip，方法如下：
首先下载优选ip工具 https://wwl.lanzouq.com/i47y623faqmj 下载后解压，双击“warp-yxip.bat”，运行后会让你选择优选ipv4还是ipv6，选择ipv6即可，生成的ip地址会存放在result.csv中，选择一个延迟低的ip进行复制
接下来双击“warp 设置端点.bat”，将刚才复制的ip地址粘贴到命令行回车即可
完成以上这些步骤，点击warp的连接按钮就能愉快且优雅的免流上网啦（连接成功会显示：您的internet连接是私密的）
注意：有时候会出现warp+连接不上或者连接速度很慢的情况，这是因为GFW一直在封锁和污染cloudflare的IP，这个时候就需要你重新设置IP，从result.csv中多选几个ip试试，一般情况下试出来一个可以用的IP后可以稳定使用很久。。。
使用Warp+后绕过校园网计费后&hellip;&hellip; 愉快的刷抖音、B站、油管，想刷就刷再也不用担心流量啦 电影电视剧随便看，画质只选2k+，看别的画质咳嗽 十几个G的外网数据集说下就下根本不眨眼 ]]></description>
</item>
<item>
    <title>基于快速理解Yolo算法原理视频上，记录对于算法的理解</title>
    <link>https://mrrockhy.gitee.io/posts/yolo%E7%AE%97%E6%B3%95%E7%9A%84%E6%B5%81%E7%A8%8B%E5%A4%A7%E6%A6%82%E7%90%86%E8%A7%A3/</link>
    <pubDate>Fri, 28 Jun 2024 15:34:22 &#43;0800</pubDate>
    <author>Toserhy</author>
    <guid>https://mrrockhy.gitee.io/posts/yolo%E7%AE%97%E6%B3%95%E7%9A%84%E6%B5%81%E7%A8%8B%E5%A4%A7%E6%A6%82%E7%90%86%E8%A7%A3/</guid>
    <description><![CDATA[基于快速理解Yolo算法原理视频上，记录对于算法的理解 Yolo算法的训练过程 训练时输入的参数：
也就是打标签时给予算法的信息：框的大小——xywh；置信度——1；类别——c1、c2、c3（是该类型，对应的种类参数就是1，不是该类型对应的种类参数就是0）；这些信息总共包含8个参数可以记作： $$ y=[P,x,y,w,h,c1,c2,c3] $$
对于我们打了标签的图像处理：
假如以上这张图就是打好标签的图片数据，yolo算法首先会对图片进行n✖n的拆分（这里假设是3乘3），紧接着遍历拆分好的每一个小格子，对应有框的格子予以保留，没有框的格子剔除。例子图片中，4、5、6号格子都有框，该怎么处理呢？我们的锚点框都有中心点，yolo算法采取的方法是：格子中有中心点的格子予以保留，没有中心点的剔除
训练过程：
简单来说，就是通过反复的迭代，将模型预测出来的目标和正确标定好的目标进行比较，不断缩小预测目标和真实目标之间的差距，而这其中的比较可以简单总结为目标函数的比较：
位置损失（Localization Loss）：衡量预测的边界框和真实边界框之间的差异。 置信度损失（Confidence Loss）：衡量预测的目标物体存在置信度与实际情况的差异。 分类损失（Class Loss）：衡量预测的类别概率分布与真实类别之间的差异。
比较后不断缩小目标和真实值之间的差距，其中的“缩小”就是反向传播。反向传播具体解释如下：
反向传播（Backward Propagation） 假设在进行了一次投篮之后，你发现投篮没有命中（损失值高），你需要调整你的投篮姿势和力量，以提高命中率。这时，你会思考：
姿势：是不是手臂抬得太低了？下次抬高点。 力量：是不是用了太多力？下次稍微减一点。 这个过程就是“计算梯度”，即找到哪些投篮姿势和力量的改变有助于降低损失值。
梯度下降算法 计算梯度：确定姿势和力量的哪些微小调整会让投篮结果变得更好（即损失值降低）。 更新参数：根据这些梯度信息，微调你的投篮姿势和力量。 梯度下降算法：每次调整的幅度可以很小，从而逐步找到最佳的投篮姿势和力量。 Adam算法和SGD算法：这些是不同的微调方法，Adam算法考虑了前几次调整的历史信息，可以更快找到最佳解；SGD（随机梯度下降）每次调整一个小批次的数据，适合处理大规模数据。 通过反复练习（即多次正向传播和反向传播），你的投篮姿势和力量会逐渐优化，命中率就会越来越高。这就是深度学习中训练模型的过程——通过不断调整网络参数，使得模型预测更加准确。
训练结果为best.pt，也就是能够最好识别目标的参数
推理过程：
对于输入的图片，使用best.pt对其进行卷积操作，也就是将图片分为很多小格子，然后获得每个格子的 $$ y=[P,x,y,w,h,c1,c2,c3] $$ 这里引入一个问题：无论如何训练，精度多么高，每个小格子都会被识别出有一定几率为某目标，这么多有几率的格子，画出很多的框，如何确定哪些框为最终检测到的目标物呢？这里就要用到一个概念叫交并比——也就是交集和并集的比。如下图：对于汽车的目标检测画出了许多检测框，如何选取最符合的检测结果，将其余对于同一目标不精确、多余的框舍去呢？
首先先说右边的汽车，使用算法选取置信度最大的框，也就是0.9的框，对图中剩余的检测框进行遍历，对于它附近的两个0.6和0.7的检测框，显然交并比都大于0.5了，这就意味着0.6和0.7的框是对于此目标多余的框，就将其去掉，留下置信度最高的0.9检测框作为最终识别结果。而左侧的两个框对于0.9检测框来说，交并比为0＜0.5，显然是对于另一目标的检测框，便予以保留。
接下来对于左边的汽车，就选取置信度最高的0.8检测框，再次使用算法进行遍历，最后留下0.8的框。
上面的内容其实就是推理过程中最重要的一步：非极大抑制值
其实视频讲的还是比较粗糙，在训练过程中确实很多具体的东西，听的云里雾里不明所以，检测过程也有待完善，例如检测框如何生成？怎么连起来的？后续还要看更具体的理论继续学习。]]></description>
</item>
<item>
    <title>深度学习（yolov5）项目笔记/遇到的问题</title>
    <link>https://mrrockhy.gitee.io/posts/deeplearning/</link>
    <pubDate>Tue, 02 Jan 2024 17:06:22 &#43;0800</pubDate>
    <author>Toserhy</author>
    <guid>https://mrrockhy.gitee.io/posts/deeplearning/</guid>
    <description><![CDATA[使用已经训练好的模型 1.在虚拟环境内外安装的库区别很大，虚拟环境内不安装的情况下运行还是会显示模块缺失，无法import库
2.核心问题：在使用自已经训练好的模型进行推理时， Can&rsquo;t get attribute &lsquo;DetectionModel&rsquo;，经排查最后问题是yolo.py版本问题，要注意训练时的yolo.py版本和推理时yolo.py版本是否一致，否则经典报错： AttributeError: Can&rsquo;t get attribute &lsquo;DetectionModel&rsquo; on &lt;module &lsquo;models.yolo&rsquo; from &lsquo;D:\DEEPLEARN\yolov5-mask-42-master\models\yolo.py&rsquo;&gt;
解决办法是git使用git上最新的yolo.py，然而又有新问题：最新的yolo引用了过多的新库。解决办法：将多余的新库在yolo.py中引用处删除，即“手动适配版本”]]></description>
</item>
<item>
    <title>Coderwhy项目笔记/遇到的问题</title>
    <link>https://mrrockhy.gitee.io/posts/about/</link>
    <pubDate>Sat, 02 Sep 2023 17:06:22 &#43;0800</pubDate>
    <author>@酒邀宇先生</author>
    <guid>https://mrrockhy.gitee.io/posts/about/</guid>
    <description><![CDATA[一些笔记 1.调用组件并替换其中的slot时，会将整个slot替换掉，因此动态绑定类或相似操作时，要在slot外面套一层div，对div进行操作，如TabBaritem中的文字颜色绑定]]></description>
</item>
<item>
    <title>router-link中的router-link-exact-active问题</title>
    <link>https://mrrockhy.gitee.io/posts/active/</link>
    <pubDate>Sat, 02 Sep 2023 17:06:22 &#43;0800</pubDate>
    <author>@酒邀宇先生</author>
    <guid>https://mrrockhy.gitee.io/posts/active/</guid>
    <description><![CDATA[什么是router-link-exact-active？ router-link-exact-active 是 Vue Router 中的一个属性，用于在页面导航时与路由页面绑定以实现精确的活动链接高亮效果。它是 组件的一个属性，用于检测当前路由是否与链接的 to 属性完全匹配。
当实现页面导航时与路由页面绑定效果时，有两种方法：
1.在router-link标签中绑定类，通过在style中设置类的样式完成link的高亮或其他效果，示例代码如下：
`
.active { font-weight: bold; color: blue; }
2.直接在style中调用link的属性，从而设置其高亮或其他效果，完成绑定。代码如下：
两种绑定效果有什么区别呢？ 在 Vue.js 中，将 .router-link-exact-active 样式规则设置在样式表（style）中和将其直接设置在 组件标签上的效果是不同的。
设置在样式表中：如果你将 .router-link-exact-active 样式规则设置在样式表中（如你之前提供的样式代码），那么这个样式规则将会应用到所有使用 Vue Router 的链接，不需要在每个链接上重复设置。这是一种更为统一和集中管理样式的方式。任何精确匹配的链接都会自动具有指定的样式。
在 &lt;router-link&gt; 组件上设置：如果你在单个 &lt;router-link&gt; 组件上设置 class 属性来指定 .router-link-exact-active 样式类，那么这个样式类仅会应用到该具体链接。这是一种更为特定和个性化的方式，允许你为不同的链接指定不同的样式类，从而实现不同的高亮效果。
通常，如果你希望所有精确匹配的链接都具有相同的高亮效果，最好将.router-link-exact-active样式规则设置在样式表中。如果你需要不同的链接有不同的高亮效果，可以在链接上设置 class 属性以覆盖全局样式。
选择哪种方式取决于你的设计需求和样式管理的偏好。]]></description>
</item>
<item>
    <title>First_post</title>
    <link>https://mrrockhy.gitee.io/posts/first_post/</link>
    <pubDate>Tue, 29 Aug 2023 09:15:41 &#43;0800</pubDate>
    <author>Toserhy</author>
    <guid>https://mrrockhy.gitee.io/posts/first_post/</guid>
    <description><![CDATA[我的第一篇博客兼简要说明&hellip;&hellip;]]></description>
</item>
</channel>
</rss>
